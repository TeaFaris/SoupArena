// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SoupArena.DataBase;

#nullable disable

namespace SoupArena.Migrations
{
    [DbContext(typeof(DBContext))]
    [Migration("20230401133538_Bonus")]
    partial class Bonus
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SoupArena.Models.Player.DB.DBInventory", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.HasKey("ID");

                    b.ToTable("Inventories");
                });

            modelBuilder.Entity("SoupArena.Models.Player.DB.DBInventoryConsumable", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<long>("Amount")
                        .HasColumnType("bigint");

                    b.Property<short>("ConsumableID")
                        .HasColumnType("smallint");

                    b.Property<long>("InventoryID")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("InventoryID");

                    b.ToTable("Consumables");
                });

            modelBuilder.Entity("SoupArena.Models.Player.DB.DBPlayer", b =>
                {
                    b.Property<decimal>("DiscordID")
                        .HasColumnType("numeric(20,0)");

                    b.Property<byte?>("ClassID")
                        .HasColumnType("smallint");

                    b.Property<long>("ConsumablesEquipedInventoryID")
                        .HasColumnType("bigint");

                    b.Property<long>("ConsumablesInventoryID")
                        .HasColumnType("bigint");

                    b.Property<byte?>("EquipmentID")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("LastTimeClaimedBonus")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("Loses")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("Silver")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("Wins")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("DiscordID");

                    b.HasIndex("ConsumablesEquipedInventoryID");

                    b.HasIndex("ConsumablesInventoryID");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("SoupArena.Models.Player.DB.DBInventoryConsumable", b =>
                {
                    b.HasOne("SoupArena.Models.Player.DB.DBInventory", "Inventory")
                        .WithMany("Items")
                        .HasForeignKey("InventoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Inventory");
                });

            modelBuilder.Entity("SoupArena.Models.Player.DB.DBPlayer", b =>
                {
                    b.HasOne("SoupArena.Models.Player.DB.DBInventory", "ConsumablesEquiped")
                        .WithMany()
                        .HasForeignKey("ConsumablesEquipedInventoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SoupArena.Models.Player.DB.DBInventory", "Consumables")
                        .WithMany()
                        .HasForeignKey("ConsumablesInventoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Consumables");

                    b.Navigation("ConsumablesEquiped");
                });

            modelBuilder.Entity("SoupArena.Models.Player.DB.DBInventory", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
